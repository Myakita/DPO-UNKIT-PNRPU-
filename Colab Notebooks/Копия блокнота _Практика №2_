{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1yATw714lOVP2T8HUP0u-GALgGSl16ygL","timestamp":1730209654972}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Практика №2\n","\n","1. Сгенерировать, используя модуль псевдослучайных чисел `random`, или ввести с клавиатуры список целых чисел. Вывести в консоль, затем перевернуть его и снова вывести в консоль.\n","\n","2. Сгенерировать, используя модуль псевдослучайных чисел `random`, или ввести с клавиатуры два списка целых чисел. Вывести их в консоль. Создать новый пустой список. Добавить в него все четные (по индексу) элементы первого списка и все нечетные (по индексу) элементы второго списка. Вывести третий список в консоль.\n","\n","3. Сгенерировать, используя модуль псевдослучайных чисел `random`, или ввести с клавиатуры список произвольных элементов (целые числа, числа с плавающей точкой, строки). Вывести в консоль. Убрать из него все дубликаты через приведение типов. Вывести в консоль.\n","\n","4. Сгенерировать, используя модуль псевдослучайных чисел `random`, или ввести с клавиатуры словарь, где ключом является строка, значением — целое число или число с плавающей точкой. Вывести в консоль. Для всех уникальных значений создать кортеж, где первым элементом будет значение, вторым — список связанных с ним ключей. Собрать эти кортежи в список, вывести его в консоль.\n","\n","5. Сгенерировать, используя модуль псевдослучайных чисел `random`, или ввести с клавиатуры два словаря, где ключом является строка, значением — целое число или число с плавающей точкой. Вывести в консоль. Найти пересечения множеств значений словарей. Создать новый словарь, содержащий только те пары ключ-значение, значения из которых входит в пересечение. Вывести в консоль.\n","\n","[Ссылка на документацию функции `random`](https://docs.python.org/3/library/random.html)\n","\n","[Built-in Types](https://docs.python.org/3/library/stdtypes.html?highlight=tuple#tuple)"],"metadata":{"id":"64JPlHixec69"}},{"cell_type":"markdown","source":["## Задание 1"],"metadata":{"id":"HAVFiCLPo28O"}},{"cell_type":"code","source":["import random\n","\n","def generate_list(k):\n","  return [random.randrange(0,10) for _ in range(k)]\n","\n","u = generate_list(5)\n","print(u)\n","print(list(reversed(u)))\n","\n"],"metadata":{"id":"YyusyI57F_6_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730210533813,"user_tz":-300,"elapsed":340,"user":{"displayName":"Никита Мокрушин","userId":"09939782906112038471"}},"outputId":"b1ad5da2-66db-4784-b7a0-aeb5d6131b1f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[6, 5, 2, 0, 1]\n","[1, 0, 2, 5, 6]\n"]}]},{"cell_type":"markdown","source":["## Задание 2"],"metadata":{"id":"a1gbYjASfIqJ"}},{"cell_type":"code","source":["import random\n","\n","def generate_list(k):\n","  return [random.randrange(0,10) for _ in range(k)]\n","\n","l1 = generate_list(5)\n","l2 = generate_list(5)\n","print(l1)\n","print(l2)\n","\n","result = []\n","result.extend(l1[i] for i in range(0,len(l1),2))\n","result.extend(l2[i] for i in range(1,len(l2),2))\n","\n","print(result)\n"],"metadata":{"id":"Q0qL-Z2CGAXx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730211566107,"user_tz":-300,"elapsed":369,"user":{"displayName":"Никита Мокрушин","userId":"09939782906112038471"}},"outputId":"a1af0dd2-ae1c-4da5-c616-1476937a1537"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 4, 3, 2, 9]\n","[1, 6, 7, 9, 9]\n","[2, 3, 9, 6, 9]\n"]}]},{"cell_type":"markdown","source":["## Задание 3"],"metadata":{"id":"ZITkT8YUfM8t"}},{"cell_type":"code","source":["import random\n","\n","def generate_list(k):\n","    array = ['a', 'b', 'c', 'd', 'e']\n","    u = random.sample(array, k)\n","    u.extend(random.uniform(0.0, 10.0) for _ in range(k))\n","    u.extend(random.randrange(0, 10) for _ in range(k))\n","    return u\n","\n","u = generate_list(5)\n","print(list(set(u)))\n"],"metadata":{"id":"FIKNuLjQGAsW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730388115947,"user_tz":-300,"elapsed":348,"user":{"displayName":"Никита Мокрушин","userId":"09939782906112038471"}},"outputId":"8ef1af9c-506a-407f-dd9d-a58494e4569c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1.2705586953295789, 2.757807023381499, 4.904675885347705, 5.3570293829818025, 5, 6, 8.556737246961163, 8, 'd', 'c', 'e', 'a', 'b']\n"]}]},{"cell_type":"markdown","source":["## Задание 4"],"metadata":{"id":"sqvNf2a6fTdY"}},{"cell_type":"code","source":["import random\n","\n","data = {f'key{i}': random.choice([random.randint(1, 10), random.uniform(1, 10)]) for i in range(10)}\n","print(data)\n","\n","unique_values = {}\n","for key, value in data.items():\n","    if value in unique_values:\n","        unique_values[value].append(key)\n","    else:\n","        unique_values[value] = [key]\n","\n","result = [(value, keys) for value, keys in unique_values.items()]\n","print(result)\n"],"metadata":{"id":"4qaYZ2dMGBEr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730388317872,"user_tz":-300,"elapsed":378,"user":{"displayName":"Никита Мокрушин","userId":"09939782906112038471"}},"outputId":"4dc5bc08-10bb-45f0-fc05-d514e6100b99"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["{'key0': 1.12634940558653, 'key1': 2.993933324899383, 'key2': 6.136388220195857, 'key3': 4.948824302535681, 'key4': 5, 'key5': 8.867866455553367, 'key6': 5.795757904453815, 'key7': 3, 'key8': 2.6158458920158254, 'key9': 3}\n","[(1.12634940558653, ['key0']), (2.993933324899383, ['key1']), (6.136388220195857, ['key2']), (4.948824302535681, ['key3']), (5, ['key4']), (8.867866455553367, ['key5']), (5.795757904453815, ['key6']), (3, ['key7', 'key9']), (2.6158458920158254, ['key8'])]\n"]}]},{"cell_type":"markdown","source":["## Задание 5"],"metadata":{"id":"3V5mJOBQfYHe"}},{"cell_type":"code","source":["import random\n","\n","data1 = {f'key{i}': random.choice([random.randint(1, 10), random.uniform(1, 10)]) for i in range(5)}\n","data2 = {f'key{i+5}': random.choice([random.randint(1, 10), random.uniform(1, 10)]) for i in range(5)}\n","\n","print(data1)\n","print(data2)\n","\n","intersection_values = set(data1.values()).intersection(data2.values())\n","\n","result = {k: v for k, v in {**data1, **data2}.items() if v in intersection_values}\n","\n","print(result)\n"],"metadata":{"id":"7RJzU4DiGBXQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730388471186,"user_tz":-300,"elapsed":342,"user":{"displayName":"Никита Мокрушин","userId":"09939782906112038471"}},"outputId":"e3829f50-20ee-4c2b-fad9-e03fce17916e"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["{'key0': 10, 'key1': 1.462158846315696, 'key2': 9.672152369322507, 'key3': 6, 'key4': 6}\n","{'key5': 5, 'key6': 4.177169124109229, 'key7': 2, 'key8': 10, 'key9': 4.069247388431222}\n","{'key0': 10, 'key8': 10}\n"]}]}]}